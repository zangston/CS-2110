/*
 * User.java
 * Winston Zhang (wyz5rge)
 * CS 2110, Professor Graham
 * Homework 2
 * September 25, 2020
 */

import java.util.*;

public class User {

	//Instance variables
	private String userName;
	private ArrayList<Meme> memesCreated;
	private ArrayList<Meme>	memesViewed;
	
	//Constructor method
	public User(String userName)
	{
		this.userName = userName;
		this.memesCreated = new ArrayList<Meme>();
		this.memesViewed = new ArrayList<Meme>();
	}
	
	public User()
	{
		this.userName = "";
		this.memesCreated = new ArrayList<Meme>();
		this.memesViewed = new ArrayList<Meme>();
	}
	
	//Getter methods for instance variables
	public String getUserName() 
	{
		return userName;
	}	
	
	public ArrayList<Meme> getMemesCreated() 
	{
		return memesCreated;
	}
	
	public ArrayList<Meme> getMemesViewed() 
	{
		return memesViewed;
	}
	
	//Setter methods for instance variables
	public void setUserName(String userName) 
	{
		this.userName = userName;
	}
	
	public void setMemesCreated(ArrayList<Meme> memesCreated) 
	{
		this.memesCreated = memesCreated;
	}
	
	public void setMemesViewed(ArrayList<Meme> memesViewed) 
	{
		this.memesViewed = memesViewed;
	}
	
	//Class behavior methods
	public void rateMeme(Meme m, int rating)
	{
	}
	
	public Meme createMeme(BackgroundImage b, String caption)
	{
		Meme m = new Meme(b, caption, this);
		this.memesCreated.add(m);
		return m;
	}
	
	public void deleteMeme(Meme m)
	{
		if(!m.getShared())
			this.memesCreated.remove(m);
		return;
	}
	
	public void shareMeme(Meme m, Feed f)
	{
		m.setShared(true);
		ArrayList<Meme> f1 = new ArrayList<Meme>(f.getMemes());
		f1.add(m);
		f.setMemes(f1);
	}
	
	public void rateNextMeme(Feed f, int ratingScore)
	{
		Meme m = f.getNewMeme(this);
		ArrayList<Meme> update = new ArrayList<Meme>(this.getMemesViewed());
		update.add(m);
		this.setMemesViewed(update);
		
		ArrayList<Rating> r = m.getRatings();
		Rating r1 = new Rating(this, ratingScore);
		r.add(r1);
		m.setRatings(r);
		
		return;
	}
	
	public double calculateReputation()
	{
		double sum = 0;
		if(memesCreated.size() == 0)
			return 0.0;
		for(Meme m : memesCreated)
		{
			sum += m.calculateRating();
		}
		return sum;
	}
		
	/*
	 * toString method, returns "username has rated (number of memes viewed) memes, (reputation)"
	 * e.g. Benito Mussolini has rated (10) memes, (9.0)
	 */
	@Override
	public String toString()
	{
		if(memesViewed.size() == 0)
			return userName + " has rated 0 memes, " + this.calculateReputation();
		if(memesViewed.size() == 1)
			return userName + " has rated 1 meme, " + this.calculateReputation();
		return userName + " has rated (" + memesViewed.size() + ") memes, " + "(" + this.calculateReputation() +")";
	}
	
	/*
	 * equals method generated by Eclipse
	 * returns true if username matches
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		User other = (User) obj;
		if (userName == null) {
			if (other.userName != null)
				return false;
		} else if (!userName.equals(other.userName))
			return false;
		return true;
	}
}
